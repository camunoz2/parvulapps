generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Student {
  id       Int    @id @default(autoincrement())
  name     String
  lastName String
  rut      String

  // Class Relation -- one student cant belong on more than one class
  classroomId Int       @unique
  classroom   Classroom @relation(fields: [classroomId], references: [id])
  Score       Score[]

  @@index([classroomId])
}

model Classroom {
  id          Int       @id @default(autoincrement())
  name        String
  fantasyName String
  section     String
  status      Boolean
  students    Student[]
}

model Score {
  id               Int             @id @default(autoincrement())
  value            Int
  category         Category?       @relation(fields: [categoryId], references: [id])
  categoryId       Int?
  Student          Student?        @relation(fields: [studentId], references: [id])
  studentId        Int?
  evaluationId     EvaluationTerm? @relation(fields: [evaluationTermId], references: [id])
  evaluationTermId Int?

  @@index([categoryId, studentId, evaluationTermId])
}

model Descriptor {
  id          Int       @id @default(autoincrement())
  description String
  isActive    Boolean
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  Int?

  @@index([categoryId])
}

model Category {
  id         Int          @id @default(autoincrement())
  name       String
  Score      Score[]
  Descriptor Descriptor[]
}

model Teacher {
  id          Int      @id @default(autoincrement())
  name        String
  lastName    String
  rut         String
  mail        String
  permissions String
  lastLogin   DateTime
}

model EvaluationTerm {
  id    Int     @id @default(autoincrement())
  name  String
  Score Score[]
}
